=encoding utf8

=for comment
This has been completed up to c60dbbc38, except for:
d9018cbe5b480ba29cc6151aba8f5102a7e009c4 (Eric Brine)
    -- while I (use git blame to find out who) see how this change within
       lex_read_unichar is correct, I cannot tell at a glance what visible
       effects this bug has at the Perl level or through the lexer API.
a04eb69c733e84250299f12df200f10b76b0a45c (David Golden)
7a799f6bb3cac2e1bf9bede83579324cffa59c16 (David Golden)
be48bbe8d671b6841c3ec7cb734b98071afe3cd9 (Chip)

=head1 NAME

[ this is a template for a new perldelta file. Any text flagged as
XXX needs to be processed before release. ]

perldelta - what is new for perl v5.15.4

=head1 DESCRIPTION

This document describes differences between the 5.15.3 release and
the 5.15.4 release.

If you are upgrading from an earlier release such as 5.15.3, first read
L<perl5153delta>, which describes differences between 5.15.3 and
5.15.4.

=head1 Notice

XXX Any important notices here

=head1 Core Enhancements

=head2 $^X converted to an absolute path on FreeBSD, OS X and Solaris

C<$^X> is now converted to an absolute path on OS X, FreeBSD (without
needing F</proc> mounted) and Solaris 10 and 11. This augments the
previous approach of using F</proc> on Linux, FreeBSD and NetBSD
(in all cases, where mounted).

This makes relocatable perl installations more useful on these platforms.
(See "Relocatable @INC" in F<INSTALL>)

=head2 Unicode Symbol Names

Perl now has proper support for Unicode in symbol names.  It used to be
that C<*{$foo}> would ignore the internal UTF8 flag and use the bytes of
the underlying representation to look up the symbol.  That meant that
C<*{"\x{100}"}> and C<*{"\xc4\x80"}> would return the same thing.  All
these parts of Perl have been fixed to account for Unicode:

=over

=item *

Method names (including those passed to C<use overload>)

=item *

Typeglob names (including names of variables, subroutines and filehandles)

=item *

Package names

=item *

Constant subroutine names (not null-clean yet)

=item *

C<goto>

=item *

Symbolic dereferencing

=item *

Second argument to C<bless()> and C<tie()>

=item *

Return value of C<ref()>

=item *

Package names returned by C<caller()>

=item *

Subroutine prototypes

=item *

Attributes

=item *

Various warnings and error messages that mention variable names or values,
methods, etc.

=back

In addition, a parsing bug has been fixed that prevented C<*{é}> from
implicitly quoting the name, but instead interpreted it as C<*{+é}>, which
would cause a strict violation.

C<*{"*a::b"}> automatically strips off the * if it is followed by an ASCII
letter.  That has been extended to all Unicode identifier characters.

C<$é> is now subject to "Used only once" warnings.  It used to be exempt,
as it was treated as a punctuation variable.

=head2 Support for Embedded Nulls

Some parts of Perl did not work correctly with nulls (C<chr 0>) embedded in
strings.  That meant that, for instance, C<< $m = "a\0b"; foo->$m >> would
call the "a" method, instead of the actual method name contained in $m.
These parts of perl have been fixed to support nulls:

=over

=item *

Method names

=item *

Typeglob names (including filehandle names)

=item *

Package names

=item *

Autoloading

=item *

Return value of C<ref()>

=item *

Package names returned by C<caller()>

=item *

Filehandle warnings

=item *

Typeglob elements (C<*foo{"THING\0stuff"}>)

=item *

Signal names

=item *

Various warnings and error messages that mention variable names or values,
methods, etc.

=back

One side effect of these changes is that blessing into "\0" no longer
causes C<ref()> to return false.

=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=head1 Incompatible Changes

XXX For a release on a stable branch, this section aspires to be:

    There are no changes intentionally incompatible with 5.XXX.XXX
    If any exist, they are bugs and reports are welcome.

[ List each incompatible change as a =head2 entry ]

=head1 Deprecations

XXX Any deprecated features, syntax, modules etc. should be listed here.
In particular, deprecated modules should be listed here even if they are
listed as an updated module in the L</Modules and Pragmata> section.

[ List each deprecation as a =head2 entry ]

=head1 Performance Enhancements

XXX Changes which enhance performance without changing behaviour go here. There
may well be none in a stable release.

[ List each enhancement as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>, which prints stub
entries to STDOUT.  Results can be pasted in place of the '=head2' entries
below.  A paragraph summary for important changes should then be added by hand.
In an ideal world, dual-life modules would have a F<Changes> file that could be
cribbed.

[ Within each section, list entries as a =item entry ]

=head2 New Modules and Pragmata

=over 4

=item *

XXX

=back

=head2 Updated Modules and Pragmata

=over 4

=item *

L<Archive::Tar> has been upgraded from version 1.78 to version 1.80.

=item *

L<Digest> has been upgraded from version 1.16 to version 1.17.

=item *

L<DynaLoader> has been upgraded from version 1.13 to 1.14.

It stopped exporting its symbols with the ExtUtils::ParseXS changes in
5.15.2.  Now it exports them once more.

=item *

L<ExtUtils::MakeMaker> has been upgraded from version 6.59 to version 6.61_01.

=item *

L<ExtUtils::ParseXS> has been upgraded from version 3.04_04 to version 3.05.

=item *

L<Module::Load> has been upgraded from version 0.20 to version 0.22.

Resolve possible security problem [http://goo.gl/YzHRU] where a '::' prefixed
module can 'jump' out of @INC

=item *

L<perlfaq> has been upgraded from version 5.0150034 to version 5.0150035.

=item *

L<Unicode::Collate> has been upgraded from version 0.78 to version 0.80.

Locales updated to CLDR 2.0: ar, be, bg, ha, hr, kk, lt.
Newly supported locales: as, fi__phonebook, gu, hi, kn, kok and ln.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

XXX

=back

=head1 Documentation

XXX Changes to files in F<pod/> go here.  Consider grouping entries by
file and be sure to link to the appropriate page, e.g. L<perlfunc>.

=head2 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=head3 L<XXX>

XXX Description of the purpose of the new file here

=head2 Changes to Existing Documentation

XXX Changes which significantly change existing files in F<pod/> go here.
However, any changes to F<pod/perldiag.pod> should go in the L</Diagnostics>
section.

=head3 L<perlfunc>, L<open>

=over 4

=item *

As an accident of history, C<open $fh, "<:", ...> applies the default
layers for the platform (C<:raw> on Unix, C<:crlf> on Windows), ignoring
whatever is declared by L<open.pm|open>.  This seems such a useful feature
it has been documented in L<perlfunc|perlfunc/open> and L<open>.

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

XXX New or changed warnings emitted by the core's C<C> code go here. Also
include any changes in L<perldiag> that reconcile it to the C<C> code.

[ Within each section, list entries as a =item entry that links to perldiag,
  e.g.

  =item *

  L<Invalid version object|perldiag/"Invalid version object">
]

=head2 New Diagnostics

XXX Newly added diagnostic messages go here

=head3 New Errors

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head3 New Warnings

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head2 Changes to Existing Diagnostics

XXX Changes (i.e. rewording) of diagnostic messages go here

=over 4

=item *

The message,
"Code point 0x%X is not Unicode, no properties match it; all inverse
prop erties do" has been changed to "Code point 0x%X is not Unicode, all
\p{} matches fail; all \P{} matches succeed"


=back

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go
here. Most of these are built within the directories F<utils> and F<x2p>.

[ List utility changes as a =head3 entry for each utility and =item
entries for each change
Use L<XXX> with program names to get proper documentation linking. ]

=head3 L<XXX>

=over 4

=item *

XXX

=back

=head1 Configuration and Compilation

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.  Any other changes to the Perl build process should be listed here.
However, any platform-specific changes should be listed in the
L</Platform Support> section, instead.

[ List changes as a =item entry ].

=over 4

=item *

XXX

=back

=head1 Testing

XXX Any significant changes to the testing of a freshly built perl should be
listed here.  Changes which create B<new> files in F<t/> go here as do any
large changes to the testing harness (e.g. when parallel testing was added).
Changes to existing files in F<t/> aren't worth summarising, although the bugs
that they represent may be covered elsewhere.

[ List each test improvement as a =item entry ]

=over 4

=item *

F<t/porting/checkcfgvar.t> now tests that all config.sh-style files are
complete. These are used by the various non-*nix to generate their
F<config.h>, and an incomplete input file will generate invalid output.

=back

=head1 Platform Support

XXX Any changes to platform support should be listed in the sections below.

[ Within the sections, list each platform as a =item entry with specific
changes as paragraphs below it. ]

=head2 New Platforms

XXX List any platforms that this version of perl compiles on, that previous
versions did not. These will either be enabled by new files in the F<hints/>
directories, or new subdirectories and F<README> files at the top level of the
source tree.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Discontinued Platforms

XXX List any platforms that this version of perl no longer compiles on.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Platform-Specific Notes

XXX List any changes for specific platforms. This could include configuration
and compilation changes or changes in portability/compatibility.  However,
changes within modules for platforms should generally be listed in the
L</Modules and Pragmata> section.

=over 4

=item XXX-some-platform

XXX

=back

=head1 Internal Changes

XXX Changes which affect the interface available to C<XS> code go here.
Other significant internal changes for future core maintainers should
be noted as well.

[ List each change as a =item entry ]

=over 4

=item *

These new functions have been added as part of the work on Unicode symbols:

    HvNAMELEN
    HvNAMEUTF8
    HvENAMELEN
    HvENAMEUTF8
    gv_init_pv
    gv_init_pvn
    gv_init_pvsv
    gv_fetchmeth_pv
    gv_fetchmeth_pvn
    gv_fetchmeth_sv
    gv_fetchmeth_pv_autoload
    gv_fetchmeth_pvn_autoload
    gv_fetchmeth_sv_autoload
    gv_fetchmethod_pv_flags
    gv_fetchmethod_pvn_flags
    gv_fetchmethod_sv_flags
    gv_autoload_pv
    gv_autoload_pvn
    gv_autoload_sv
    newGVgen_flags
    sv_derived_from_pv
    sv_derived_from_pvn
    sv_derived_from_sv
    sv_does_pv
    sv_does_pvn
    sv_does_sv
    whichsig_pv
    whichsig_pvn
    whichsig_sv

The gv_fetchmethod_*_flags functions, like gv_fetchmethod_flags, are
experimental and may change in a future release.

=item *

The following functions were added.  These are I<not> part of the API:

    GvNAMEUTF8
    GvENAMELEN
    GvENAME_HEK
    CopSTASH_flags
    CopSTASH_flags_set
    PmopSTASH_flags
    PmopSTASH_flags_set
    sv_sethek

=item *

C<sv_catpvn_flags> takes a couple of new internal-only flags,
C<SV_CATBYTES> and C<SV_CATUTF8>, which tell it whether the char array to
be concatenated is UTF8.  This allows for more efficient concatenation than
creating temporary SVs to pass to C<sv_catsv>.

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarised here.
Bug fixes in files in F<ext/> and F<lib/> are best summarised in
L</Modules and Pragmata>.

[ List each fix as a =item entry ]

=over 4

=item *

In Perl 5.14.0, C<$tainted ~~ @array> stopped working properly.  Sometimes
it would erroneously fail (when C<$tainted> contained a string that occurs
in the array I<after> the first element) or erroneously succeed (when
C<undef> occurred after the first element) [perl #93590].

=item *

Perl 5.15.0 introduced a minor regression, in that an object referenced by
a deleted hash element would be able to access the freed element from its
DESTROY method, causing panic errors [perl #99660].

=item *

Functions in the CORE package can now be called as methods.  That used to
work only when they had been called or referenced already.  So
C<< "foo"->CORE::ucfirst >> returns Foo.

=item *

C<use> and C<require> are no longer affected by the I/O layers active in
the caller's scope (enabled by L<open.pm|open>) [perl #96008].

=item *

Errors that occur when methods cannot be found during overloading now
mention the correct package name, as they did in 5.8.x, instead of
erroneously mentioning the "overload" package, as they have since 5.10.0.

=item *

Undefining C<%overload::> no longer causes a crash.

=item *

C<our $::é; $é> (which is invalid) no longer produces the "Compilation
error at lib/utf8_heavy.pl..." error message, which it started emitting in
5.10.0 [perl #99984].

=item *

A minor regression, introduced Perl 5.15.0, has been fixed in which some
regular expression Unicode property matches (C<\p{...}>) matched
non-Unicode code points.

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here. Any
tests that had to be C<TODO>ed for the release would be noted here, unless
they were specific to a particular platform (see below).

This is a list of some significant unfixed bugs, which are regressions
from either 5.XXX.XXX or 5.XXX.XXX.

[ List each fix as a =item entry ]

=over 4

=item *

XXX A couple of modules were broken by stdbool.h changes, or was that in
5.15.3?

=back

=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX Generate this with:

  perl Porting/acknowledgements.pl v5.15.3..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the articles
recently posted to the comp.lang.perl.misc newsgroup and the perl
bug database at http://rt.perl.org/perlbug/ .  There may also be
information at http://www.perl.org/ , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug>
program included with your release.  Be sure to trim your bug down
to a tiny but sufficient test case.  Your bug report, along with the
output of C<perl -V>, will be sent off to perlbug@perl.org to be
analysed by the Perl porting team.

If the bug you are reporting has security implications, which make it
inappropriate to send to a publicly archived mailing list, then please send
it to perl5-security-report@perl.org. This points to a closed subscription
unarchived mailing list, which includes
all the core committers, who will be able
to help assess the impact of issues, figure out a resolution, and help
co-ordinate the release of patches to mitigate or fix the problem across all
platforms on which Perl is supported. Please only use this address for
security issues in the Perl core, not for modules independently
distributed on CPAN.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details
on what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
